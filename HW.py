# Задача 1 Даны значения величины заработной платы заемщиков банка (zp) и значения их
# поведенческого кредитного скоринга (ks):
# zp = [35, 45, 190, 200, 40, 70, 54, 150, 120, 110],
# ks = [401, 574, 874, 919, 459, 739, 653, 902, 746, 832].
# Найдите ковариацию этих двух величин с помощью элементарных действий, а затем с
# помощью функции cov из numpy
# Полученные значения должны быть равны.
# Найдите коэффициент корреляции Пирсона с помощью ковариации и
# среднеквадратичных отклонений двух признаков,
# а затем с использованием функций из библиотек numpy и pandas.

import numpy as np

zp = np.array([35, 45, 190, 200, 40, 70, 54, 150, 120, 110])
ks = np.array([401, 574, 874, 919, 459, 739, 653, 902, 746, 832])

mean_zp, mean_ks = sum(zp) / len(zp), sum(ks) / len(ks)
cov1 = (sum((zp[k] - mean_zp) * (ks[k] - mean_ks) for k in range(len(zp)))/ (len(zp) - 1))
cov2 = np.cov(zp, ks, ddof=1)
print(f'Ковариация обычным способом = {cov1}, С помощью функции cov = {cov2}')

sko_zp, sko_ks = np.std(zp, ddof=1), np.std(ks, ddof=1)
k_pirson1 = cov1 / (sko_ks * sko_zp)
print(f'Коэффициент Пирсона = {k_pirson1}')
k_pirson2 = np.corrcoef(zp, ks)
print(f'Коэффициент Пирсона numpy = {k_pirson2}')


# Задача 2 Измерены значения IQ выборки студентов,
# обучающихся в местных технических вузах:
# 131, 125, 115, 122, 131, 115, 107, 99, 125, 111.
# Известно, что в генеральной совокупности IQ распределен нормально.
# Найдите доверительный интервал для математического ожидания с надежностью 0.95.

# не известно СКО генеральной совокупности, значит t критерий xsr +-tal/2 *sigma / sqrt(n)

import scipy.stats as st

iq = [131, 125, 115, 122, 131, 115, 107, 99, 125, 111]
alfa = 0.05
n = len(iq)
sigma = np.std(iq)
t = st.t.ppf(1-.05/2, 2*(n-1))
xsr = np.mean(iq)
print(f'Доверительный интервал ({round(xsr-t*sigma/np.sqrt(n), 2)} : {round(xsr+t*sigma/np.sqrt(n), 2)})')


# Задача 3 Известно, что рост футболистов в сборной распределен нормально
# с дисперсией генеральной совокупности, равной 25 кв.см. Объем выборки равен 27,
# среднее выборочное составляет 174.2. Найдите доверительный интервал для
# математического
# ожидания с надежностью 0.95.


#  известно СКО генеральной совокупности, значит Z критерий xsr +-Zal/2 *sigma / sqrt(n)

sigma = 25
n = 27
xsr = 174.2
z = st.norm.ppf(1-.05/2)

print(f'Доверительный интервал ({round(xsr-z*sigma/np.sqrt(n), 2)} : {round(xsr+z*sigma/np.sqrt(n), 2)})')
